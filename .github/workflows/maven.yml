## This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
## For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven
#
## This workflow uses actions that are not certified by GitHub.
## They are provided by a third-party and are governed by
## separate terms of service, privacy policy, and support
## documentation.
#
#name: Java CI/CD
#
#on:
#  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]
#
#jobs:
#  deploy:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 18
#        uses: actions/setup-java@v2
#        with:
#          java-version: '18'
#
#      - name: Build with Maven
#        run: mvn -B package --file pom.xml
#
#      - name: Add SSH key to known hosts
#        uses: webfactory/ssh-agent@v0.5.3
#        with:
#          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
#        run: ssh-keyscan -H your-ec2-instance-ip >> ~/.ssh/known_hosts
#
#      - name: Deploy to EC2
#        run: |
#          ssh -i /path/to/your/ssh/key.pem ec2-user@your-ec2-instance-ip "bash /path/to/your/deployment-script.sh"
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}



#  deploy:
#    needs: build
#    runs-on: [aws-ec2-blogApplication]
#    steps:
#      - name: Pull Image from Docker hub
#        run: sudo docker pull simonalan/blog-application:latest
#      - name: Delete old container
#        run: docker rm -f blog_application_container
#      - name: Run docker container
#        run: docker run -d -p 8080:8080 --name blog_application_container simonalan/blog-application

