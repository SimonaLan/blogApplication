# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Start MySQL Container
        run: |
          docker run --detach --name mysql_blog_application --env MYSQL_ROOT_PASSWORD=simona --env MYSQL_DATABASE=blogdb --env MYSQL_USER=simona --env MYSQL_PASSWORD=simona --publish 3306:3306 mysql
          sleep 10 # Give some time for MySQL to start

      - uses: actions/checkout@v3
      - name: Setup JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven
      - name: Build Project
        run: mvn clean install
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker images
        run: docker-compose -f $GITHUB_WORKSPACE/docker-compose.yml build && docker-compose -f $GITHUB_WORKSPACE/docker-compose.yml push



#  deploy:
#    needs: build
#    runs-on: [aws-ec2-blogApplication]
#    steps:
#      - name: Pull Image from Docker hub
#        run: sudo docker pull simonalan/blog-application:latest
#      - name: Delete old container
#        run: docker rm -f blog_application_container
#      - name: Run docker container
#        run: docker run -d -p 8080:8080 --name blog_application_container simonalan/blog-application

